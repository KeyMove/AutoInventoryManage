<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="TableImage.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="TableImage.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAADO
        KQAAAk1TRnQBSQFMAgEBCAEAAWgBAAFoAQABEAEAARABAAT/ARkBAAj/AUIBTQE2BwABNgMAASgDAAFA
        AwABMAMAAQEBAAEYBgABJP8A/wD/AP8A/wD/AP8A/wD/AP8A/wD/AB4AAeAC4wHUAdkB2gHUAdkB2gHU
        AdkB2gHUAtoB1QLaAdUB2gHcAdUB2gHcAdYB3AHdAdYB3AHeAdYB3AHdAeEC5QP8AckB2wHjAYwBuAHL
        AYkBrwHAAaUBqAGpAYwBkAGRAYsBkAGSAYwBkgGTAYwBkwGUAY0ClAGOApUBjwGVAZYBlQGZAZsBpAGq
        AasBtQG8Ab4BuAHAAcIBugHCAcMBvQHDAcUBvAHFAcYBzgLTAakBsAHEAYoBlAGyAYkBkgGxAYkBkwGx
        AYkBkwGzAYoBkwGzAYoBlAGzAYoBlQGzAYwBlQGzAYwBlQGzAYwBlgGzAYwBlwG1AYwBlwG2AY4BlwG2
        AZIBnAG6AbcBvAHOAwAB1QHdAeEBeAGcAaoBdQGZAagBdQGZAakBdQGZAakBdgGZAakBeAGdAa0BewGj
        AbMBfQGmAbgBfQGoAbkBfwGpAbkBgAGpAbkBgwGrAbwB1QHfAeMD/gHGAdAB0gHHAdEBzwHKAdACywHR
        AcsBzAHSAswB0gLNAdMCzwHUAc8B0AHVAdAB0QHWAtEB2QHWAdEB3AHdA/cBsgHRAd4BWAGkAcIBTQGO
        AacBgAGGAYgBfAGJAYgBegGTAY0BdQF/AYwBdAF5AY4BcwF4AY8BdwF8AY4BfQGEAYsBggGJAYoBiwGS
        AZMBngGmAacBrwG4AboBswG8Ab4BtQG+AcABtgG/AcEBvwHIAcoBWwFsAZsBVQFlAZcBWgFqAZUBXQFt
        AZUBXQFuAZYBXgFuAZYBXgFvAZcBXwFwAZgBYAFxAZkBYAFxAZkBYQFyAZoBYgFyAZoBYwFzAZ0BYgFy
        AZ8BYgFxAaIBdgGFAa8D/gGUAbIBvgE2AXUBjgE2AXYBjwE4AXcBkAE6AXgBkgE8AXkBkwFAAX4BmQFG
        AYkBpQFJAY8BrAFJAZABrAFJAZEBrQFLAZIBrwFMAZMBsAGbAb8BzgP8AcMB0AHSAc4BzwHFAdcBzAG3
        AdcBzAG4AdgBzAG4AdgBzAG4AdgBzQG4AdgBzQG4AdgBzQG4AdgBzQG4AdUB0wHHAdIB2wHeAfUC9gGw
        AdEB3gFTAaEBwQFGAYgBowF9AoEBegGVAY8BeQGrAZwBbAF7AZoBaAFtAZwBZwFrAaABbQFxAZsBewGB
        AZABhAKLAYUBjAGNAY4BlQGWAaABqQGqAbMBuwG9AbcBwAHCAbkBwgHEAb4ByAHKAU8BYQGWAVsBbAGc
        AZEBngGzAaABrQG5AaIBrgG6AaMBrwG7AZ4BqwG3AZMBoAGsAY4BmgGmAZIBnQGpAZsBpgGyAZ4BqgG1
        AZkBpQGzAYsBmAGvAWQBdQGlAW4BfgGsA/4BjgGuAbsBNgF1AY4BNwF2AY8BQAF7AZQBbwGVAaQBmAGq
        AbIBnAGvAbcBqAG8AcQBrgHDAcsBhgGwAcEBVQGXAbIBSwGTAbABTgGVAbIBmAG9Ac0D/AHDAdEB0wHQ
        Ac8BwwHaAcsBsQHaAcsBsgHaAcsBsgHaAcsBsgHbAcsBsgHaAcsBsgHaAcsBsgHaAcsBsQHXAdIBwwHU
        Ad4B4QH1AvYBsAHRAd4BVQGlAcUBSAGMAacBfQGBAYIBegGHAYYBewGOAYoBeAF/AYoBdwF9AYwBeAF9
        AY0BegGAAY0BfwGFAYoBgwKKAYMBigGLAYYBjAGNAY8BlQGWAaIBqQGrAbQBvAG+AbgBwQHDAb8ByQHL
        AU8BYQGXAWEBcgGfAawBugHGAcEBzgHRAcMB0AHSAcQB0AHSAcEBzgHQAbQBvwHCAaEBrAGuAaQBrQGv
        AcIByQHLAc8B1QHXAbUBvwHDAZ0BqgG5AWgBeQGoAW8BfwGtA/4BjwGvAbwBNwF2AY8BOAF3AZABRQF+
        AZUBhAGeAakBswGyAbEBswGyAbEBwAG/Ab4BywHKAckBngG6AcUBWgGbAbQBTAGUAbEBTwGWAbMBmAG+
        Ac0D/AHEAdIB1AHRAc8BxAHaAcsBsQHaAcsBsgHbAcwBsgHWAccBswHVAcYBswHbAcwBsgHaAcsBsgHa
        AcsBsQHYAdMBwwHUAeAB4gH1AvYBsAHRAd4BVQGkAcUBSQGMAacBeAF+AYABZwFuAXEBYwFwAXQBYwFx
        AXYBZAFyAXcBZQFzAXgBZgF0AXkBaAF1AXoBaQF2AXsBaQF2AXsBagF3AXwBbAF6AX4BdQGDAYcBhQGU
        AZgBmgGlAagBuwHAAcIBUAFiAZcBYgF0AaEBsQG/AcoBxwHUAdcBxAHRAdMBuQHFAccBtQHAAcEBsAG7
        Ab0BoQGrAa0BoQGpAaoBygLPAe8C8QHSAdkB2gGlAbABvwFpAXoBqQFwAYABrwP+AY8BrwG9ATgBdwGQ
        ATkBdwGRAUYBfwGXAYUBnwGqAbQBsgGxAbQBsgGxAcEBvwG+AcwBygHJAZ8BuwHGAVwBnAG2AU4BlQGz
        AVABlwG0AZgBvgHPA/wBxQHTAdUB0QHQAcQBqQGdAYkBfQF1AWYBhQJ8AXMBbAGHAWQBXgFuAXkBcQFz
        AaIBlwGFAY0BgwFzAdgB0wHEAdQB4gHkAfUC9gGwAdIB3gFVAaMBwwFLAY0BqAF7AYABgQFjAX0BhwFN
        AY4BpwFMAZEBrAFMAZIBrQFNAZMBrgFOAZQBrwFPAZUBsQFRAZcBsgFRAZcBswFSAZgBtAFUAZoBtQFX
        AZwBtwFkAaMBugGTAa4BuAG9AcUBxgFRAWMBmAFjAXUBogGyAcABywHIAdUB2AHGAdMB1QG9AcoBzAG6
        AccByAG7AccByQG3AcIBxAG3AcEBwgHTAtkB9AL3AeYB6wHtAbcBwgHPAWwBfAGrAXEBgAGvA/4BjwGw
        Ab0BOQF3AZEBOgF4AZIBQwF+AZYBbQGUAaUBkAGmAa8BkwGqAbQBnwG4AcIBpQG/AckBhAGwAcEBWAGa
        AbUBTwGXAbQBUQGYAbUBmAG+Ac8D/AHGAdQB1gHSAdEBxQGMAYIBcQFBAT0COgE4AWABLAErAW8CGwFG
        ASwBKwFSAXQBbAFtAWABWQFNAdgB0wHEAdUB4wHlAfUC9gGwAdIB3wFaAakBygFQAZQBrwGAAYIBgwFp
        AZEBoAFIAa0B1QFEAbIB3QFIAbQB3wFNAbcB4QFPAbgB4gFQAbkB5AFSAbsB5QFSAbsB5gFSAb0B5wFP
        Ab0B6AFQAb4B6QFeAb8B5QGaAcIB0QHDAssBUQFkAZkBZAF2AaMBswHBAc0ByQHWAdkBxwHTAdUBuwHH
        AckBuAHEAcYBuQHFAccBugHFAccBuwHFAccBxgHQAdEB2wHkAeUB3wHoAesBvgHKAdgBbwF/Aa4BcgGB
        AbAD/gGQAbABvgE6AXkBkwE8AXoBlAE9AXoBkwE8AXUBjAE8AXEBhgFAAXUBjAFGAYABmAFJAYUBngFM
        AYsBpgFPAZUBsgFSAZkBtgFTAZoBtwGaAcABzwP8AccB1QHXAdIB0QHFAY0BgwFxAToBNwE7AiUBZQEm
        ASUBcQEgASEBRAEnASsBTwJlAW0BXwFZAU0B2QHUAcUB1gHkAeUB9QL2AbMB0wHhAWABsAHQAVUBmQG0
        AYYBigGLAW0BlgGmAUkBtAHeAUUBuQHnAVUBwAHqAWcBxwHtAW0BywHwAW4BzAHxAXABzQHyAXABzQHy
        AWgBzAHzAVcBxwHzAVEBxgH0AWABxwHwAZ0BxwHWAcgBzQHOAVIBZAGaAWUBdwGkAbUBwgHOAcsB2AHa
        AcgB1QHXAb0BygHMAboBxgHIAbwBxwHJAb0ByAHKAb4ByQHLAcIBzwHQAc8B2wHdAdUB4gHmAbwBygHY
        AXEBggGxAXMBggGxA/4BjQGoAbQBMwFoAX8BNAFqAYABNAFjAXYBLQFBAUoBKAEtATABKgEvATMBLgEz
        ATcBLgEzATcBNgFLAVUBQgF3AYwBSQGJAaMBUQGXAbQBmwHBAdAD/AHIAdUB1wHSAdEBxQGNAYMBcQE7
        ATcBOwImAWUBKQEoAXABKQEwATwBJQE8AT8BUgFoAWEBXgFYAU0B2QHUAcUBzwHZAdoB9AL1AbUB1gHj
        AWMBsgHRAVgBmgG1AcQCxQGWAbcBxAFPAbgB4QFFAbkB5wFYAcEB6wFqAckB7gFxAcwB8AFyAc0B8QF0
        Ac4B8wF0Ac8B8wFrAc0B9AFZAcgB9AFSAcYB9AFnAcYB7gG0AdIB3gHfAeAB4gFSAWQBmgFlAXcBpAG1
        AcIBzgHLAdgB2wHJAdYB2AHAAcwBzgG9AckBywG+AcoBzAHAAcsBzQHAAcwBzgHFAdEB0wHQAd0B3gHW
        AeMB5gG8AcsB2QFxAYIBsQFzAYIBsQP+AYoBogGrAS0BWwFuAS4BXAFvAS4BWwFuAS4BVAFjAS0BTgFb
        ATABUQFfATQBWAFnATcBWwFrATkBYwF0ATwBbwGDAT8BdAGJAUkBhgGfAZsBwAHOAfwC/QHJAdYB2QHT
        AdIBxgGMAYIBcQFCAT0BOgE8AToBXwE1ATMBbQEoATcBNgEbAUMBNAFPAW0BWwFeAVgBTQHPAcoBugG2
        AcEBwgLzAfQBuAHYAeUBaAG3AdcBWwGeAbgD9wHQAeIB6QFbAb8B5gFGAbsB6AFVAcEB7AFlAcgB7gFq
        AcoB8AFrAcsB8QFtAcwB8wFtAc0B9AFnAc0B9QFZAcgB9QFRAcIB7wFtAcAB4QHWAeUB6gP5AVMBZQGb
        AWYBeAGlAbYBxAHQAcwB2QHcAckB1gHYAb4ByQHLAboBxQHHAbsBxwHJAb0ByAHKAb0ByAHKAcMBzgHQ
        Ac8B3AHeAdcB5AHnAb4BzAHaAXIBgwGyAXMBgwGyAe4B8QHzAX4BnAGqATQBZgF7ATUBZwF7ATYBaAF8
        ATYBaQF+ATcBagF/AToBbwGEAUABeAGOAUMBfAGUAUMBfAGUAUQBfAGUAUQBfQGUAUYBfwGXAYoBsAHC
        AewB8AHyAcoB2AHaAdQB0gHHAaQBmQGFAXQBbAFfAYABeAF1AXYBbgGAAVsBZAFbAVQBbQFbAYsBjgF7
        AXwBcwFkAbMBrgKgAakBqwHyAvMBugHaAegBbgG+Ad8BXgGhAb0DAAHjAe8B8wFjAcMB6QFIAbwB6QFc
        AcQB7gFyAc0B8QF5AdAB8wF6AdIB9AF8AdMB9QF8AdMB9gFyAdAB9gFaAcUB7wFLAbMB3AFqAbEBzAHk
        AewB7wMAAVQBZgGcAWgBeQGmAbgBxQHRAc4B2wHeAcwB2QHbAcQB0AHSAcIBzQHPAcMBzwHRAcQB0AHS
        AcQB0AHSAckB1QHXAdMB4AHiAdgB5QHpAb8BzQHbAXMBhAGzAXQBhAGyAV0BlAGsAU8BjAGhAUoBiAGh
        AUoBiAGhAUoBiAGhAUoBiAGhAUoBiAGhAU0BjAGmAVMBlwGyAVUBmwG4AVUBmwG4AVUBmwG4AVUBmwG4
        AVUBmwG4AVkBnAG5AWcBpgG+AcwB2QHbAdQB0wHHAdoBywGxAdoBywGyAdsBzAGyAdoBywGyAc0BxwGu
        Ac0ByAGuAdoBzAG0AcEBtgGiAacBowGaAa0CsgL0AfUBuwHcAegBbQG8Ad0BXAGfAboDAAHiAe4B8wFj
        AcUB6gFJAb0B6wFVAcMB7gFiAcgB8AFnAcoB8gFoAcwB8wFqAc0B9QFqAc4B9gFmAcsB8wFZAbsB4gFN
        AaYByQFxAbEBygHlAe0B8AMAAVUBaAGdAWkBegGnAbkBxwHSAc8B3AHfAcwB2QHbAb8BywHNAbsBxgHI
        AbwBxwHJAb0ByAHKAb0ByQHKAcQBzwHQAdEB3QHfAdkB5gHqAcABzgHcAXQBhQG0AXQBhAGyAVMBkAGq
        AVEBkQGrAVEBkgGrAVEBkgGrAVEBkgGrAVEBkgGrAVEBkgGrAVQBlgGwAVoBoQG9AV0BpgHDAV0BpgHD
        AV0BpgHDAV0BpgHDAV0BpgHDAV0BpQHDAV4BpwHCAc0B2gHcAdUB1AHIAdoBywGxAdoBywGyAdoBywGy
        AdoBywGyAdsBywGyAdsBywGyAd4B0wHBAdgB0wHMAdQB0gHOAdgB2gHcA/kBuQHbAekBbAG6AdoBWwGd
        AbgDAAHiAe4B8wFkAcYB6wFKAb4B7AFgAcgB8AF4AdEB9AGAAdQB9gGBAdUB9wGDAdYB+AGFAdgB+AGF
        AdMB8wGAAccB5AF9AcAB2gGjAc4B3wHwAfQB9QMAAVYBaQGeAWoBewGoAboByAHTAdAB3QHgAdAB3gHg
        AckB2AHbAccB1wHaAcgB2AHbAckB2QHcAcoB2gHcAc4B3QHgAdcB5AHmAdoB5wHrAcEBzwHdAXUBhgG0
        AXUBhQGzAakBzQHcAW0BswHQAW0BswHQAW0BswHQAW0BswHQAW0BswHQAW0BswHQAXEBuQHXAXkBxwHn
        AX0BzQHtAX0BzQHtAX0BzQHtAX0BzQHtAX0BzQHtAX0BzQHtAbAB2wHsAc4B2wHeAdYB1QHLAdoBzQG1
        AdoBzQG2AdoBzQG2AdoBzQG2AdoBzQG2AdkBzAG0AekB4QHVA/wD9gP3AwABugHbAegBcQHBAeABYgGl
        Ab4DAAHiAe4B8wFlAcgB7QFMAcAB7gFRAcMB8QFWAcYB8gFZAcgB9AFaAckB9QFcAcsB9wFhAc0B+AGB
        AdgB+wGwAecB/AHJAekB+AHrAfIB9QP+AwABWAFqAZ8BagF7AakBtQHCAdEByQHWAdwBwwHZAeEBtwHb
        AecBtAHdAesBtAHdAesBtQHeAewBtQHeAe0BugHgAewBxwHgAekB0gHfAecBugHJAdoBdAGGAbQBdgGG
        AbMB8QH0AfYBiAHBAdgBcQG4AdUBcQG4AdUBcQG4AdUBcQG4AdUBcQG4AdUBdQG+AdwBfQHMAewBgQHS
        AfMBgQHSAfMBgQHSAfMBgQHSAfMBgQHSAfMBmAHXAfEB8AH1AfYB0QHfAeAB1AHcAdkB1wHZAdEB1wHa
        AdIB2AHbAdIB2QHcAdMB2gHdAdQB2gHdAdQB6AHrAeYD9gP3AwAD/wHNAeMB7AGWAcwB4wGQAbwBzQMA
        AeMB7wH0AWkByAHuAU4BwgHwAVABxAHyAVEBxQHzAVIBxgH0AVQByAH2AVUByQH4AVsBzAH5AYAB2QH6
        AcQB6QH2Ae0B8wH1A/4GAAFcAW0BowFhAXIBpQF+AY4BtQGGAZUBuQGBAaMByAF6Ab8B5gF3Ac8B9QF3
        Ac4B9AF4Ac4B9AF4AdAB9gF6AcUB7AGEAa8B1QGOAZ4BwwGFAZUBvgFrAX0BsAF6AYkBtgMAAc4B4QHp
        AXEBuAHVAXEBuAHVAXEBuAHVAXEBuAHVAXEBuAHVAXUBvgHcAX0BzAHsAYEB0gHzAYEB0gHzAYEB0gHz
        AYEB0gHzAYIB0QHyAdUB6QHxA/4B2gLjAdMB4AHiAdQB4QHkAdUB4wHlAdYB5AHmAdgB5QHnAdkB5gHo
        AdkB5wHpAegB7wHwA/YJAAL7AfwB+AH5AfoB+AH5AfoDAAHvAfQB9wF9Ac4B7gFVAcQB8AFTAcQB8gFU
        AcUB8wFVAccB9QFXAckB9gFYAcoB+AFdAcwB+AGaAdwB9wHnAfEB9AP+CQABhAGQAbcBYgFzAaUBXwFx
        AacBYAFxAacBYgF2AasBaQGGAbgBbwGdAckBdAG7AeIBdgHAAeYBcgGmAdABbQGOAb4BaQF/AbQBZwF5
        Aa8BaQF7AbABbwGAAbEBmQGlAcUDAAH2AfcB+AGRAcYB2gFxAbgB1QFzAbcB1AFzAbcB1AFzAbcB1AF3
        Ab0B2wF/AcsB6wGBAdEB8gGBAdEB8gGBAdEB8gGBAdIB8wGmAdoB8AH2AfgB+QP/AXoBpAG4AVUBiwGo
        AVIBiQGlAVIBigGmAVIBiwGnAVUBkQGwAV0BoQHDAWQBrgHUAWUBrgHWAWUBrwHXAWYBsAHYAWcBsQHY
        AWgBsgHYAWkBswHZAXEBtgHbAaQBzgHjAXcBoQG2AVIBiQGlAVEBiQGnAVIBigGnAVMBiwGnAVUBkQGy
        AV4BoQHEAWIBrAHVAWMBrgHWAWUBrwHWAWYBsQHXAWcBsgHYAWkBswHZAWkBtAHaAW8BtgHZAaQBzgHj
        GwAD7wO8A6sDvAPiA/0MAAH8Av0BzQHjAdwBlAHMAbsBhAHIAbMBhAHIAbMBhgHJAbUBhAHJAbUBkwHO
        Ab0BzAHjAdwB+gL7CQABPAF8AZ0BOAF5AZkBOAF6AZoBOQF7AZsBOQF7AZwBOgF+AZ8BQAGFAasBSQGY
        AcMBUAGlAdIBUQGmAdQBUgGnAdUBUwGoAdYBVAGpAdcBVQGqAdgBVQGuAdkBewG9Ad4BPAF8AZ0BOAF5
        AZkBNgF4AZoBNwF5AZsBNwF5AZwBOAF8AZ8BPgGFAaoBRwGYAcMBTgGlAdMBTwGmAdQBUAGnAdUBUQGo
        AdYBUgGpAdcBUwGrAdgBVQGrAdgBfQG+Ad8bAAPgA+MD+QPxA9kD6gkAA/0BzAHiAdwBawG4AaEBRwGw
        AZEBTQG3AZgBUQG+AaABUgHBAaIBUwHDAaMBWQHGAaYBfQHNAbUBywHkAd0B+wL8A/8D/gE3AXkBmQE2
        AXgBmgE2AXkBmwE3AXkBnAE5AXoBnQFAAYABogFPAYsBrQFaAZYBugFeAaABxgFaAaQBzQFUAagB1AFS
        AaoB2AFTAasB2QFTAawB2gFVAa0B2wF3AbsB3wE1AXcBmgE2AXgBmgE2AXkBmwE3AXkBnAE5AXoBnQFA
        AYABogFQAYsBrgFbAZcBugFeAaABxQFaAaQBzQFUAagB1AFSAaoB2AFTAasB2QFTAawB2gFUAa0B2wF6
        Ab0B4BsAA/QD0QPxA/wD6wPZA/4DAAH8Av0BygHiAdsBaAG4AZ8BPQGoAYUBNwGmAYMBPgGtAYsBSwG5
        AZgBTwHCAaABUQHFAaMBUwHHAaUBWQHIAakBfgHQAbkBygHkAdwB8gH1AfQB1AHoAeIBPAF8AZsBPAF9
        AZ8BPQF9AaABPgF+AaEBRQGDAaUBUAGLAasBVQGPAa8BUwGNAa8BVQGPAbIBXAGYAbsBXQGkAcsBWwGs
        AdcBWwGwAd0BWwGxAd4BXAGyAd8BfQG+AeABOgF7AZwBPgF9AZ8BPgF+AaABPwF+AaEBRwGEAaUBYAGP
        AaUBhAGbAZwBmAGgAZIBmgGiAZQBhgGjAagBaQGnAccBXQGtAdgBXAGwAd4BXAGxAd8BXAGyAd8BfwHA
        AeED/AP7A/wJ+wP8A/4GAAPSA+AD+QPwA9YD/AH7AvwBygHhAdoBaAG4AZ8BOgGlAYUBNgGlAYIBNgGl
        AYIBTQGuAY8BkAHLAboBlQHUAcIBZAHJAawBVQHJAacBVwHLAakBXQHMAa0BeQHRAbgBngHaAcgBiwHX
        AcABVAGKAaoBVQGNAa4BVQGNAa4BVgGOAa8BVQGOAa8BTwGKAasBQwGHAaMBOgGPAZ0BPAGOAZ4BSAGI
        AakBXQGbAb4BbwGzAdsBdwHAAeoBeQHCAesBegHDAewBkwHLAesBUwGMAawBVQGNAa4BVQGNAa4BVgGO
        Aa8BXQGQAawBgQGXAZYBtwGiAXcBxwGmAW4ByAGnAW4BuAGmAXwBggGmAa4BdAG1AdkBdwHAAeoBeQHC
        AewBewHDAewBlAHNAesD0APJA8wDwAO9A8MD1AP0BgADxwO4A+sD8gPWA/kBvwHcAdMBZgG3AZ8BOgGm
        AYUBNgGlAYIBNgGlAYIBTAGtAY8BpgHRAcMB5wHwAe0B5wHxAe4BsAHfAdEBaAHNAa8BWQHNAasBWwHP
        Aa0BXQHPAbABZgHRAbMBcQHWAbcBYQGVAbUBUwGMAa0BTgGIAakBTQGJAaoBSgGHAagBQAGHAaIBMQGS
        AZcBJwGnAY0BKQGnAY8BOAGQAZwBSgGOAa0BXgGjAcoBawG2AeABcQG+AegBfAHEAe4BoQHTAfIBYQGW
        AbYBUwGMAa0BTAGIAakBSgGIAakBVQGJAaMBhQGUAYkByQGlAWgB0wGoAWUB1QGqAWcBygGoAW0BgAGa
        AZkBZQGlAcYBaAG1Ad8BcAG9AegBewHEAe4BoQHTAfIDxQO9A8EDsgOsA7UDygPyAwAD/gPVA7ED2QPq
        A9kD9gFWAaUBiwE5AaMBgAE2AaUBggE2AaUBggFMAa0BjwGoAdMBxgHrAfIB8Ab9AewB8wHxAbMB4QHT
        AWwB0QGzAV0B0QGvAV4B0gGwAWAB1AGyAXEB2AG6AWQBmAG4AUkBhgGnAT8BfwGhAT4BfgGhAToBhQGe
        ATEBlAGWASYBqgGMASABtwGGASIBuAGIASwBqgGRATkBlQGeAUYBkQGwAVEBngHHAV0BrwHbAXIBvwHq
        AaUB1wH1AWQBmAG4AUkBhgGnAT4BfwGgATsBfgGgAUkBggGbAYEBkgGGAcsBpgFpAdQBqgFnAdYBqwFp
        AcwBqQFtAXgBkwGRAVABjwGuAU8BnAHFAVwBrgHZAXEBvwHqAaQB1wH1A8YDvgPCA7MDrgO2A8sD8gMA
        A/4D2gPcA9UDuwPIA/UBLAGBAWcBMAGSAXIBNAGhAX4BUgGvAZEBqgHTAccB7AHyAfAD/QYAAfsB/AH7
        AdkB6wHmAYAB1gG8AV8B0wGxAWAB1AGyAWIB1gGzAXMB2gG7AWUBmAG4AUcBhAGlATwBfQGeATcBgwGc
        ATABlgGVASYBqwGMASEBuAGHASEBuwGHASMBvAGJASYBvAGMAS4BrQGTATkBmQGfAUQBkQGvAVIBnAHF
        AW0BtwHhAaYB1wH1AWUBmAG4AUcBhAGlATwBfAGeATkBewGdAUgBgAGZAYIBkgGFAcwBqAFrAdYBqwFp
        AdcBrQFqAc0BqwFvAXcBkgGPAUoBhQGhAUQBiQGuAVEBmwHCAWwBtgHfAaUB1wH1A8YDvQPBA7IDrAO1
        A8oD8gMAA/UDwwPrA/gD2QO4A/MBMwGMAXoBMQGQAX0BOgGjAY0BgwHFAbsB1QHpAecB9AL3A/0GAAH6
        AfsB+gHcAewB6AGgAdwBywF7AdQBwAFaAcsBugFaAc0BugFrAc8BvgFpAZ4BvwFFAX8BngE2AX4BlAEt
        AZQBkAEmAawBiwEhAbgBhwEhAboBhwEiAbsBiAEkAb0BigEmAb8BjAEoAb4BjgEwAbABlAE4AZcBmgFF
        AYwBpwFkAaUBygGmAdYB8wFqAZ8BwAFFAX4BnQE3AXMBkgE0AXEBkQFEAXcBjgGAAY0BfwHNAagBawHX
        AawBagHYAa4BbAHOAasBcAF0AYwBhwFFAXsBlAE7AXgBmAFFAYMBpAFjAaQBxwGlAdUB8wPMA8YDyQO9
        A7gDvwPRA/MDAAPZA9ED7QP2A+kD2QPzAUIBsAG3AUABrgG1AUUBtwG8AYABzwHZAbIB4QHqAeUB8QHz
        AfsC/AYAA/sB7AHzAfEBzAHmAeQBhgHLAdIBQQGzAcYBQAGyAcUBVQG4AcoBdQGuAdEBRQF8AZoBMAF9
        AYcBJwGTAYUBJgGkAYUBJAGuAYcBIwG7AYkBJAG9AYoBJgG/AYwBKAG/AY0BKwGzAY0BLgGqAY0BMgGW
        AY0BPQGEAZQBXQGXAbYBpQHTAfEBdQGwAdMBRgF8AZkBOAFrAYQBNwFpAYIBRgFwAYEBggGJAXgBzwGq
        AWwB2AGuAWwB2gGwAW0B0AGtAXABdgGHAX4BRwFzAYYBPQFvAYgBQwF2AZEBXQGWAbYBpAHTAfED+wb6
        CfkD+wP+AwAD6QPjA94DzgPEA9cD9AFOAcgB4QFNAcoB4wFRAcsB5AFRAc0B5wF/AdcB6AHhAe8B8gP8
        BgAD/gH0AfcB+AHCAd0B6AFbAbMB0wEpAZ4BzAEpAZ4BzAFBAacBzgF/Ab0B4wFJAYEBnwEyAXIBhgEu
        AXQBgQEuAX0BhAEqAZcBhwElAboBiwEmAb8BjAEnAcEBjQEqAb0BjgEwAZYBigE0AYEBiQE1AXoBiQE9
        AXwBkAFcAZYBtQGlAdMB8QF/Ab0B4wFKAYABngFMAXMBgQFgAnkBdQGDAXkBngGVAXMB0wGsAW0B2QGv
        AW0B2wGxAW8B1QGwAXEBmQGWAXoBeAGIAX8BZQF/AYIBVAF8AY0BXgGWAbUBpAHUAfIbAAPlA94D9wP/
        A/MD1wPyAVAByQHiAU8BzAHlAVEBzgHnAVMB0AHpAXcB1wHqAc8B6gHwAfYC+Qb+AfQB9wH4AcAB3AHo
        AVkBsQHUASkBngHMASkBngHMASsBnQHLAU8BrQHRAYIBwAHmAU8BhgGmAToBbwGNATcBagGIATYBcgGJ
        AS8BkQGKAScBuwGMAScBwQGNASkBwgGPASwBvgGQATYCjwE8AXYBjgE9AXEBjwFEAXkBlwFhAZoBugGn
        AdYB8gGBAcAB5gFQAYgBpwFhAYIBiQGZAZYBewHBAaYBdAHQAasBbgHZAbABbgHbAbEBbwHcAbIBcAHd
        AbQBcgHWAbEBdQHIAa8BfQKdAYYBaQGLAZYBYwGbAbwBpgHVAfMSAAP9A/MDzAPDA/AD/QMAA/oD4QPK
        AVEBywHkAVIBzQHlAVMBzwHoAVUB0gHrAVcB1AHtAX4B2gHsAc8B6wHxAfUB+AH5AfMB9gH3Ab4B2wHn
        AVgBsAHTASkBngHLASkBnQHLAS0BnwHKAUcBqgHOAZsBzQHgAY8BxwHoAWwBoQHBAWEBlgG0AV4BkQGw
        AVcBkgGoAUIBoQGZASoBvQGNASgBwgGOASoBwwGQATEBwQGUAVABqQGqAWEBmwG1AWcBmwG5AWoBnwG8
        AXwBsgHTAbEB2wH1AZMByAHqAXUBrAHIAW0BoAG+AY8BrAGxAbwBtgGXAdcBtAF8AdoBsAFxAdwBsgFw
        Ad0BswFxAd4BtAF1Ad0BuwGCAcEBvAGiAZUBsQG6AXgBqwHFAYUBuQHYAbMB2wH1DwAD/APpA7ED0gPr
        A/MD+wb+A/IDtgFhAdAB5gF+AdUB6AFlAdQB6gFYAdMB7AFYAdUB7gFZAdYB7wF/AdwB7wG/AeUB7gGt
        AdUB4gFUAakBywEnAZYBwgEnAZYBwgEsAZYBwwFKAaYBywGkAc8B4AH0AfYB+AHKAeEB7wG4AdoB7QG4
        AdkB7gG4AdkB7gGsAdIB4gF5AcYBvwEvAcEBkAEqAcMBkAErAcQBkQE1AccBmgGPAdYB1QG2Ad0B7wG+
        Ad4B8wG+AeAB8wHDAeIB8wHXAekB9AHVAeYB8QHHAeAB7wHEAd8B8AHHAd4B7gHQAdsB3AHZAc0BswHe
        AbkBgAHdAbMBcwHfAbUBdQHhAbwBhAHeAdMBvAHRAd8B4QHJAeMB8QHJAeMB9AHOAeYB9AHfAewB9A8A
        A/UDvgNfAyUDHgMmA6wG8wPPA9oBtAHiAewB6AHyAfQBrgHhAe0BbQHXAewBXAHXAfABWwHYAfEBXgHb
        AfQBYQHUAe0BSQGzAc8BKQGLAa4BIQF9AaIBJAF+AaMBRQGQAa8BpAHGAdQB9gH4AfkDAAP+CfwB9gL4
        AcMB5gHbAT0BxgGZASsBxAGRAS0BxgGTAUMBygGdAdQB6wHkAfgC+Qj8Af0D/gP/Cf4D/QH3AfUB8wHq
        AdsBxgHhAbkBfwHfAbgBfgHrAd4BywH4AfcB9gP9Cf4D/w8AA/YDxgNoA0sDTwNVA6cDyAPOA+kD/wL7
        AfwD/wH2AfgB+QG0AeQB7gFwAdwB8QFfAdoB8gFfAdwB9QFhAd8B+AFcAdQB7wFDAa0BygEqAYIBowFB
        AYkBpgGnAcUB0QH3AfgB+RIAAfoC+wHIAegB3QFBAccBmwEtAcYBkwEuAccBlAFHAc0BoAHZAe0B5wH7
        AvwbAAP/AfkB+AH2AewB4AHNAeoB3QHHAfsB+gH5A/8eAAP+A/EDtgOdA6QDoQOvA9UD9Q8AAfUB+AH5
        Aa0B5AHxAW8B3gH0AWcB3gH2AWgB4AH4AWoB4gH6AWMB1gHwAV4BtwHRAaIBxAHRAfYB9wH4CQABQgFN
        AT4HAAE+AwABKAMAAUADAAEwAwABAQEAAQEFAAGAAQEWAAP/hwABgEsAAYABAQYAAYABAQYAAYABAQUA
        AQgBgAEBBQABEAGAAQMCAAGAAgABOAGAAQcCAAGABQAB/wGBAeABBwQAAf8BgQHABQAB/wKABgABwAcA
        AcAHAAGABwABgAEBAYAFAAGAAQEBgAUAAYABAQGABQABgAEBAYAEAAH/AYAGAAH8AQgGAAH4BwAB+AIA
        AQEEAAH4AgABAwHwAQ8B+AEfAfgBAwHgAQcL
</value>
  </data>
</root>